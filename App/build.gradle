apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'android-apt'

android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resValue("string", "app_name", "Simple_Android")

        resValue("string", "showToast", showToast("false"))
    }

    //配置签名
    signingConfigs {
        zzy {
            storeFile file(System.properties['keyStore'])
            storePassword System.properties['keyStorePassword']
            keyAlias System.properties['keyAlias']
            keyPassword System.properties['keyAliasPassword']
        }
    }


    buildTypes {

        release {
            minifyEnabled false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.zzy
            resValue("string", "app_name", "Simple_Android_Release")

            resValue("string", "showToast", showToast("false"))

        }

        //继承已有构建类型
        //zzy.initWith(buildTypes.debug)
        //自定义新类型
        zzy {
            signingConfig signingConfigs.zzy
            applicationIdSuffix ".zzy"

            resValue("string", "app_name", "Simple_Android_Zzy")

            resValue("string", "showToast", showToast("true"))

        }
    }

    //配置项目结构
    sourceSets {
        main {
            res.srcDirs = ['src/main/res',
                           'src/main/res/layout/network',
                           'src/main/res/layout/mode_frame',
                           'src/main/res/layout/permission']
        }
    }

    //多渠道打包
    productFlavors {
        product1 {
            manifestPlaceholders = [CHANNEL_VALUE: "PRODUCT1"]
        }

        product2 {
            manifestPlaceholders = [CHANNEL_VALUE: "PRODUCT2"]
        }

        product3 {
            manifestPlaceholders = [CHANNEL_VALUE: "PRODUCT3"]
        }
    }

    productFlavors.all {
        flavor ->
            flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }

    //生成重命名包名
    applicationVariants.all {
        variant ->
            variant.outputs.each {
                output ->
                    if (output.outputFile != null
                            && output.outputFile.name.endsWith('.apk')
                            && 'release'.equals(variant.buildType.name)) {
                        def apkFile = new File(output.outputFile.getParent(), "SimpleAndroid_${variant.flavorName}_ver${variant.versionName}.apk")
                        output.outputFile = apkFile
                    }
            }
    }

    dataBinding {
        enabled true
    }

}

def showToast(def result) {
    return result
}



apt {
    arguments {
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
        resourcePackageName 'com.simple.android'
    }
}


dependencies {

    ext.kotlin_version = '1.1.2-4'

    compile fileTree(include: ['*.jar'], dir: 'libs')

    //单元测试
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    //mockito测试框架
    testCompile 'org.mockito:mockito-core:2.8.47'

    //powermock测试框架
    testCompile 'org.powermock:powermock-module-junit4:1.7.0'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.7.0'
    testCompile 'org.powermock:powermock-api-mockito:1.7.0'

    //Robolectric测试框架
//    testCompile  'org.robolectric:robolectric:3.1.4'

    compile rootProject.ext.dependencies.supportv7 //强制更新 {transitive = true}


    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:25.3.1'

    //glide库
    compile 'com.github.bumptech.glide:glide:3.7.0'

    //picasso库
    compile 'com.squareup.picasso:picasso:2.5.2'

    //fresco库
    compile 'com.facebook.fresco:fresco:0.14.1'
    compile 'com.facebook.fresco:animated-base-support:0.14.1'
    compile 'com.facebook.fresco:animated-gif:0.14.1'
    compile 'com.facebook.fresco:animated-webp:0.14.1'



    //rxjava和rxandroid
    compile 'io.reactivex:rxjava:1.3.0'
    compile 'io.reactivex:rxandroid:1.2.1'

    //rxjava2和rxandroid
//    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
//    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    //retrofit2
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'

    //butterknife依赖
    compile 'com.jakewharton:butterknife:8.6.0'
    compile 'com.jakewharton:butterknife-compiler:8.6.0'

    //androidannotations依赖
    apt 'org.androidannotations:androidannotations:4.3.1'
    compile 'org.androidannotations:androidannotations-api:4.3.1'


    //gson
    compile 'com.google.code.gson:gson:2.8.1'


    //permissiongen库
    compile 'com.lovedise:permissiongen:0.0.6'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"




}




//task makeJar(type: Jar){
//    delete 'libs/sdk.jar'
//    baseName 'sdk'
//    from('build/intermediates/classes/product1/debug/com/simple/')
//    into('com/simple/')
//    exclude('test/','BuildConfig.class','R.class')
//    exclude{it.name.startsWith('R$');}
//}